// canonical-domain.js
//
// Force a redirect to a particular domain, specified
// in settings. Express middleware.
//
// For example, a visit to www.domain.com/path will
// be redirected to domain.com/path, assuming "domain.com"
// is the specified "domain-name" in the settings.
//
// Note, canonical domain needs to be before an https redirect, 
// otherwise a browser will try to use the canonical https 
// certificate to connect to the non-canonical domain, which 
// typically will not work out.
//
var guard = require('circle-blvd/errors').guard;

module.exports = function (settings) {
    // TODO: canonicalDomain will not work for the first request
    // after the settings are changed, because it's before the 
    // settings cache middleware.
    return function (req, res, next) {
        if (!settings) {
            return next();
        }

        settings.get(guard(next, function (settingsTable) {
            if (!settingsTable) {
                return next();
            }

            var domainName = undefined;
            if (settingsTable['domain-name'] && settingsTable['domain-name'].value) {
                domainName = settingsTable['domain-name'].value.trim();
            }

            if (!domainName || req.hostname === domainName) {
                return next();
            }

            var hostAndPort = req.get('Host');
            var redirectToHost = domainName;
            if (hostAndPort) {
                redirectToHost = hostAndPort.replace(req.hostname, domainName);
            }

            var url = req.protocol + "://" + redirectToHost + req.originalUrl;
            // Give ourselves some leeway and use a temporary redirect instead
            // of a permanent one (http 308)
            res.redirect(307, url);
        }));
    };  
};